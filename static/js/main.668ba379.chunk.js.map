{"version":3,"sources":["Components/Button.js","Components/FlagMonetaryCountryUnit.js","Components/Modal.js","server/url.js","redux/actions.js","redux/types.js","features/Header/Header.js","features/From/From.js","features/Modal/CurrenciesModal/CurrencyModal.js","features/To/To.js","features/Modal/SettingModal/SettingModal.js","App.js","serviceWorker.js","redux/reducers.js","stores.js","index.js"],"names":["Button","props","className","btnType","onClick","handleOnClick","btnName","FlagMonetaryCountryUnit","countryCode","titleMonetary","currency","width","Modal","classModal","titleModal","children","typeModal","handleCloseModal","url","EXCHANGE_RATES","EXCHANGE_RATEAPI","COUNTRY_MONETARY","setObjectForm","payload","type","setCloseAllModal","mapdispatchToProps","setShowModelCurrencies","setShowSettingModal","connect","mapDispatchToProps","setInputValue","setCurrentObject","state","changeObjectFrom","appReducers","currentObjectFrom","useState","showInput","setShowInput","Object","keys","length","fullCountryName","onChange","e","value","target","toggleFavouriteMonetary","modalSearch","showFullCountryNames","faviousCountries","isCurrencyModelShowing","placeholder","toLowerCase","map","country","isFavorite","key","uuidv4","_handleFavouriteMonetary","inputOriginalValue","faviouscountry","_handleOnClick","convertedAmount","parseFloat","baseRate","isNaN","toLocaleString","maximumFractionDigits","_handleExchange","setApiUrl","isSettingModelShowing","apiRateUrl","setUrl","exchangeRateApi","aboutLink","europeanBank","abountLink","openExchangeRates","htmlFor","id","name","_handleOnChangeOption","console","log","href","fetchRateNames","dispatch","getState","a","apiBase","axios","get","resCurr","rates","data","API_URL","res","useEffect","Boolean","window","location","hostname","match","initialState","loading","error","initialFullCountryNames","allRates","allReducers","action","countryObjects","entries","rate","newObj","undefined","push","originalCountryNames","newArr","faviousArr","filter","nonFaviousArr","indexOf","reducers","combineReducers","stores","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.668ba379.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Button = (props) => {\n  return (\n    <>\n      <button className={`btn ${props.btnType}`} onClick={props.handleOnClick}>\n        {props.btnName ? props.btnName : <span className=\"swap\">⇅</span>}\n      </button>\n    </>\n  );\n};\n","import React from \"react\";\nimport CurrencyFlag from \"react-currency-flags\";\n\nconst FlagMonetaryCountryUnit = ({ countryCode, titleMonetary }) => {\n  return (\n    <div className=\"exchange_component_title\">\n      <CurrencyFlag currency={countryCode} width={40} />\n      <div className=\"monetary_code exchange_component_item\">\n        {titleMonetary}\n      </div>\n    </div>\n  );\n};\n\nexport default FlagMonetaryCountryUnit;\n\n// Component 1\n","import React from \"react\";\nimport \"./styles.scss\";\nconst Modal = ({\n  classModal,\n  titleModal,\n  children,\n  typeModal,\n  handleCloseModal,\n}) => {\n  return (\n    <div className={typeModal}>\n      <div className=\"modal-overlay\">\n        <div className=\"modal-wrapper\">\n          <div className={classModal}>\n            <h1>{titleModal}</h1>\n            <span className=\"isClose\" onClick={handleCloseModal}>\n              x\n            </span>\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","const url = {\n  EXCHANGE_RATES: \"https://open.exchangerate-api.com/v6/latest\", //code + rates\n  EXCHANGE_RATEAPI: \"https://api.exchangeratesapi.io/latest\",\n\n  COUNTRY_MONETARY: \"https://openexchangerates.org/api/currencies.json\", //code + country monetary\n};\nexport default url;\n","// import { v4 as uuidv4 } from \"uuid\";\nimport { API_URL } from \"../server/\";\nimport axios from \"axios\";\nimport {\n  SET_ORIGINAL_VALUE,\n  TOGGLE_FAVOURITE_MONETARY,\n  FETCH_RATE_NAMES_START,\n  FETCH_RATE_NAMES_SUCCESS,\n  FETCH_RATE_NAMES_FAIL,\n  SEARCH_CURRENT_MODAL,\n  SWITCH_OBJECT_FROM,\n  SET_CURRENT_OBJECT_FROM,\n  TOGGLE_CURRENT_MODAL,\n  TOGGLE_SETTING_MODAL,\n  CLOSE_ALL_MODAL,\n  SET_API_URL,\n} from \"./types\";\n\nexport const fetchRateNames = () => async (dispatch, getState) => {\n  dispatch({\n    type: FETCH_RATE_NAMES_START,\n  });\n  try {\n    const apiBase = getState().appReducers.apiRateUrl.url;\n    // call rates\n    const resCurr = await axios.get(apiBase);\n    const rates = resCurr.data.rates;\n    // call country name\n    const res = await axios.get(API_URL.COUNTRY_MONETARY);\n    const data = res.data;\n    dispatch({\n      type: FETCH_RATE_NAMES_SUCCESS,\n      payload: { rates, data },\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_RATE_NAMES_FAIL,\n    });\n  }\n};\n\nexport const setInputValue = (payload) => ({\n  type: SET_ORIGINAL_VALUE,\n  payload,\n});\n\nexport const toggleFavouriteMonetary = (payload) => ({\n  type: TOGGLE_FAVOURITE_MONETARY,\n  payload,\n});\n\nexport const modalSearch = (payload) => ({\n  type: SEARCH_CURRENT_MODAL,\n  payload,\n});\n\nexport const setObjectForm = (payload) => ({\n  type: SWITCH_OBJECT_FROM,\n  payload,\n});\n\nexport const setCurrentObject = (payload) => ({\n  type: SET_CURRENT_OBJECT_FROM,\n  payload,\n});\n\nexport const setShowModelCurrencies = (payload) => ({\n  type: TOGGLE_CURRENT_MODAL,\n  payload,\n});\n\nexport const setShowSettingModal = (payload) => ({\n  type: TOGGLE_SETTING_MODAL,\n  payload,\n});\n\nexport const setCloseAllModal = (payload) => ({\n  type: CLOSE_ALL_MODAL,\n  payload,\n});\n\nexport const setApiUrl = (payload) => {\n  return {\n    type: SET_API_URL,\n    payload,\n  };\n};\n\n// =================================\n","// =================================================================\nexport const FETCH_RATE_NAMES_START = \"APP/FETCH_RATE_NAMES_START\";\nexport const FETCH_RATE_NAMES_SUCCESS = \"APP/FETCH_RATE_NAMES_SUCCESS\";\nexport const FETCH_RATE_NAMES_FAIL = \"APP/FETCH_RATE_NAMES_FAIL\";\n\nexport const SEARCH_CURRENT_MODAL = \"MODAL/SEARCH_CURRENT_MODAL\";\n\nexport const SWITCH_OBJECT_FROM = \"FROM/SWITCH_OBJECT_FROM\";\n\nexport const SET_CURRENT_OBJECT_FROM = \"FROM/SET_CURRENT_OBJECT_FROM\";\nexport const TOGGLE_FAVOURITE_MONETARY = \"APP/TOGGLE_FAVOURITE_MONETARY\";\nexport const SET_ORIGINAL_VALUE = \"APP/SET_ORIGINAL_VALUE\";\n\nexport const TOGGLE_CURRENT_MODAL = \"APP/TOGGLE_CURRENT_MODAL\";\nexport const TOGGLE_SETTING_MODAL = \"APP/TOGGLE_SETTING_MODAL\";\nexport const CLOSE_ALL_MODAL = \"APP/CLOSE_ALL_MODAL\";\n\nexport const SET_API_URL = \"APP/SET_API_URL\";\n","import React from \"react\";\nimport { Button } from \"../../Components/index\";\nimport { connect } from \"react-redux\";\nimport {\n  setShowModelCurrencies,\n  setShowSettingModal,\n} from \"../../redux/actions\";\n\nconst Header = ({ setShowModelCurrencies, setShowSettingModal }) => {\n  const _handleEditCurrencies = () => {\n    setShowModelCurrencies();\n  };\n  const _handleSettingsAPI = () => {\n    // console.log(\"control API source\");\n    setShowSettingModal();\n  };\n\n  return (\n    <>\n      <div className=\"header-wrapper\">\n        <h1 className=\"header_title\">Currency Conversion</h1>\n        <div className=\"header__button-wrapper\">\n          <Button\n            btnType=\"header__edit_cur\"\n            btnName=\"Edit Currencies\"\n            handleOnClick={() => _handleEditCurrencies()}\n          />\n          <Button\n            btnType=\"header__settings\"\n            btnName=\"Setting\"\n            handleOnClick={_handleSettingsAPI}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapdispatchToProps = {\n  setShowModelCurrencies,\n  setShowSettingModal,\n};\n\nexport default connect(null, mapdispatchToProps)(Header);\n","import React, { useState } from \"react\";\n// import { Card } from \"../../Components/\";\nimport FlagMonetaryCountryUnit from \"../../Components/FlagMonetaryCountryUnit\";\nimport { connect } from \"react-redux\";\nimport {\n  setInputValue,\n  setCurrentObject,\n  setObjectForm,\n} from \"../../redux/actions\";\n\nconst From = ({ setInputValue, changeObjectFrom, setCurrentObject }) => {\n  const [showInput, setShowInput] = useState(\"\");\n\n  const _handleOnChange = (e) => {\n    const { value } = e.target;\n    setInputValue(value);\n    setShowInput(value);\n  };\n  setCurrentObject(changeObjectFrom);\n\n  return Object.keys(changeObjectFrom).length > 0 ? (\n    <div className={`block_wrapper currentBlock`}>\n      <div>\n        <div className=\"Card__title\">\n          <FlagMonetaryCountryUnit\n            titleMonetary={changeObjectFrom.fullCountryName}\n            countryCode={changeObjectFrom.countryCode}\n          />\n        </div>\n        <input\n          type=\"number\"\n          onChange={_handleOnChange}\n          className=\"Card__input\"\n          value={showInput}\n        />\n        <div className=\"Card__show_value\">\n          {changeObjectFrom.countryCode} {`${showInput}`}\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    changeObjectFrom: state.appReducers.changeObjectFrom,\n    currentObjectFrom: state.appReducers.currentObjectFrom,\n  };\n};\nconst mapDispatchToProps = {\n  setInputValue,\n  setCurrentObject,\n  setObjectForm,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(From);\n","import React from \"react\";\nimport Modal from \"../../../Components/\";\nimport FlagMonetaryCountryUnit from \"../../../Components/FlagMonetaryCountryUnit\";\nimport { connect } from \"react-redux\";\nimport {\n  toggleFavouriteMonetary,\n  modalSearch,\n  setCloseAllModal,\n} from \"../../../redux/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst CurrencyModal = ({\n  showFullCountryNames,\n  toggleFavouriteMonetary,\n  modalSearch,\n  isCurrencyModelShowing,\n  setCloseAllModal,\n}) => {\n  const _handleOnChangeModalSearch = (e) => {\n    const { value } = e.target;\n    modalSearch(value.toLowerCase() || \"\");\n  };\n  const _handleFavouriteMonetary = (country) => {\n    toggleFavouriteMonetary(country);\n  };\n\n  return (\n    <>\n      <Modal\n        titleModal=\"Currency Modal\"\n        classModal=\"currencyModal\"\n        typeModal={`currencyModal-wrapper ${\n          isCurrencyModelShowing ? \"isShowing\" : \"\"\n        }`}\n        handleCloseModal={() => setCloseAllModal()}\n      >\n        <>\n          <input\n            type=\"text\"\n            className=\"currencyModal__search\"\n            placeholder=\"Search currencies\"\n            onChange={_handleOnChangeModalSearch}\n          />\n          <ul className=\"currencyModal__list\">\n            {showFullCountryNames.length > 0 ? (\n              showFullCountryNames.map((country) => {\n                return (\n                  <li\n                    className={`currencyModal__item ${\n                      country.isFavorite ? \"favoritedItem\" : \"\"\n                    }`}\n                    key={uuidv4()}\n                    onClick={() => _handleFavouriteMonetary(country)}\n                  >\n                    <FlagMonetaryCountryUnit\n                      titleMonetary={country.fullCountryName}\n                      countryCode={country.countryCode}\n                    />\n                    {country.isFavorite && (\n                      <span className=\"selected_item\">★</span>\n                    )}\n                  </li>\n                );\n              })\n            ) : (\n              <p>nothing to show</p>\n            )}\n          </ul>\n        </>\n      </Modal>\n    </>\n  );\n};\n// Tai sao remove faviousCountries lai khong dung duoc?\nconst mapStateToProps = (state) => {\n  return {\n    showFullCountryNames: state.appReducers.showFullCountryNames,\n    faviousCountries: state.appReducers.faviousCountries,\n    isCurrencyModelShowing: state.appReducers.isCurrencyModelShowing,\n  };\n};\nconst mapDispatchToProps = {\n  toggleFavouriteMonetary,\n  modalSearch,\n  setCloseAllModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FlagMonetaryCountryUnit from \"../../Components/FlagMonetaryCountryUnit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { setObjectForm } from \"../../redux/actions\";\n\nconst To = ({\n  inputOriginalValue,\n  faviousCountries,\n  setObjectForm,\n  currentObjectFrom,\n}) => {\n  const _handleOnClick = (faviouscountry) => {\n    setObjectForm(faviouscountry);\n  };\n\n  const _handleExchange = (faviouscountry) => {\n    const usdToBase = parseFloat(faviouscountry.baseRate);\n\n    const usdToChange = parseFloat(currentObjectFrom.baseRate);\n\n    const baseToChange = usdToBase / usdToChange;\n\n    const convertedAmount = baseToChange * parseFloat(inputOriginalValue);\n\n    if (isNaN(convertedAmount)) return \"\";\n    return convertedAmount.toLocaleString(\"fullwide\", {\n      maximumFractionDigits: 2,\n    });\n  };\n  return (\n    <>\n      {faviousCountries.length > 0 ? (\n        faviousCountries.map((faviouscountry) => {\n          return (\n            <div key={uuidv4()} className={`block_wrapper targetBlock`}>\n              <div className=\"Card__title\">\n                <button\n                  onClick={() => _handleOnClick(faviouscountry)}\n                  className=\"btn switch_to_currentBlock\"\n                >\n                  ⇅\n                </button>\n                <FlagMonetaryCountryUnit\n                  titleMonetary={faviouscountry.fullCountryName}\n                  countryCode={faviouscountry.countryCode}\n                />\n              </div>\n              <div className=\"Card__show_value\">\n                {faviouscountry.countryCode} {_handleExchange(faviouscountry)}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <p>\n          Please add your favorite country by click on button \"Edit currencies\"\n        </p>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    faviousCountries: state.appReducers.faviousCountries,\n    inputOriginalValue: state.appReducers.inputOriginalValue,\n    currentObjectFrom: state.appReducers.currentObjectFrom,\n  };\n};\nconst mapDispatchToProps = {\n  setObjectForm,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(To);\n","import React, { useState } from \"react\";\nimport Modal from \"../../../Components/Modal\";\nimport { Button } from \"../../../Components\";\nimport { connect } from \"react-redux\";\nimport { setApiUrl, setCloseAllModal } from \"../../../redux/actions\";\n\nconst SettingModal = ({\n  isSettingModelShowing,\n  setApiUrl,\n  setCloseAllModal,\n}) => {\n  const [url, setUrl] = useState(\"\");\n  const exchangeRateApi = {\n    url: \"https://open.exchangerate-api.com/v6/latest\",\n    key: false,\n    aboutLink: \"https://www.exchangerate-api.com/docs/free-exchange-rate-api\",\n  };\n  const europeanBank = {\n    url: \"https://api.exchangeratesapi.io/latest\",\n    key: false,\n    abountLink: \"https://exchangeratesapi.io/\",\n  };\n  const openExchangeRates = {\n    url: \"https://openexchangerates.org/api/latest.json\",\n    key: true,\n    aboutLink: \"https://docs.openexchangerates.org/\",\n  };\n\n  const _handleKeyInput = (e) => {\n    const { value } = e.target;\n    console.log(\"OUTPUT: _handleKeyInput -> value\", value);\n  };\n  const _handleSave = () => {\n    if (url === exchangeRateApi.url) {\n      setApiUrl(exchangeRateApi);\n    } else if (url === europeanBank.url) {\n      setApiUrl(europeanBank);\n    } else if (url === openExchangeRates.url) {\n      setApiUrl(openExchangeRates);\n    }\n  };\n\n  const _handleOnChangeOption = (e) => {\n    const { value } = e.target;\n    setUrl(value);\n  };\n\n  return (\n    <>\n      <Modal\n        titleModal=\"Setting\"\n        classModal=\"settingModal\"\n        typeModal={`settingModal-wrapper  ${\n          isSettingModelShowing ? \"isShowing\" : \"\"\n        }`}\n        handleCloseModal={() => setCloseAllModal()}\n      >\n        <>\n          <label htmlFor=\"settingModal__source_api\">Source</label>\n          <select\n            id=\"settingModal__source_api\"\n            name=\"source_api\"\n            className=\"settingModal__item\"\n            onChange={(e) => _handleOnChangeOption(e)}\n            value={url}\n          >\n            <option value=\"https://open.exchangerate-api.com/v6/latest\">\n              ExchangeRate-API (free - no key)\n            </option>\n            <option value=\"https://api.exchangeratesapi.io/latest\">\n              Rates from European Central Bank (free - no key)\n            </option>\n            <option value=\"https://openexchangerates.org/api/latest.json\">\n              Open Exchange Rates (free - key required)\n            </option>\n          </select>\n          {url === \"https://openexchangerates.org/api/latest.json\" ? (\n            <>\n              <label htmlFor=\"settingModal__inputKey settingModal__item\">\n                Key\n              </label>\n              <input\n                id=\"settingModal__inputKey\"\n                type=\"text\"\n                placeholder=\"Please inseart your key\"\n                onChange={_handleKeyInput}\n                className=\"settingModal__inputKey settingModal__item\"\n              />\n            </>\n          ) : null}\n\n          <a href={`${url}`} className=\"settingModal__link settingModal__item\">\n            Learn more about this source.\n          </a>\n          <div className=\"settingModal__btn__wrapper\">\n            <Button\n              btnType=\"btn settingModal__btn\"\n              handleOnClick={() => setCloseAllModal()}\n              btnName=\"Cancel\"\n            />{\" \"}\n            |\n            <Button\n              btnType=\"btn settingModal__btn\"\n              handleOnClick={() => _handleSave()}\n              btnName=\"Save\"\n            />\n          </div>\n        </>\n      </Modal>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isSettingModelShowing: state.appReducers.isSettingModelShowing,\n    apiRateUrl: state.appReducers.apiRateUrl,\n  };\n};\n\nconst mapDispatchToProps = {\n  setApiUrl,\n  setCloseAllModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingModal);\n","import React, { useEffect } from \"react\";\nimport \"./app.scss\";\nimport Header from \"./features/Header\";\nimport From from \"./features/From\";\nimport CurrencyModal from \"./features/Modal/CurrenciesModal\";\nimport To from \"./features/To\";\nimport SettingModal from \"./features/Modal/SettingModal\";\nimport { connect } from \"react-redux\";\nimport { fetchRateNames } from \"./redux/actions\";\n\nconst App = ({ fetchRateNames }) => {\n  // const [exchangeValue, setExchangeValue] = useState(\"\");\n\n  useEffect(() => {\n    fetchRateNames();\n  }, [fetchRateNames]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <Header />\n        <h2>From:</h2>\n        <From />\n        <h2>To: </h2>\n        <To />\n        <CurrencyModal />\n        <SettingModal />\n      </div>\n    </div>\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     dataMonetary: state.appReducers.dataMonetary,\n//   };\n// };\nconst mapDispatchToProps = {\n  fetchRateNames,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  SET_ORIGINAL_VALUE,\n  TOGGLE_FAVOURITE_MONETARY,\n  FETCH_RATE_NAMES_START,\n  FETCH_RATE_NAMES_SUCCESS,\n  SEARCH_CURRENT_MODAL,\n  SWITCH_OBJECT_FROM,\n  SET_CURRENT_OBJECT_FROM,\n  TOGGLE_CURRENT_MODAL,\n  TOGGLE_SETTING_MODAL,\n  CLOSE_ALL_MODAL,\n  SET_API_URL,\n} from \"./types\";\nconst initialState = {\n  loading: false,\n  error: false,\n  showFullCountryNames: [],\n  initialFullCountryNames: [],\n  inputOriginalValue: \"\",\n  allRates: \"\",\n  faviousCountries: [],\n  changeObjectFrom: {\n    fullCountryName: \"USD United States Dollar\",\n    countryCode: \"USD\",\n    baseRate: 1,\n    isFavorite: false,\n  },\n  currentObjectFrom: {},\n  isCurrencyModelShowing: false,\n  isSettingModelShowing: false,\n  apiRateUrl: {\n    url: \"https://open.exchangerate-api.com/v6/latest\",\n    key: false,\n    aboutLink: \"https://www.exchangerate-api.com/docs/free-exchange-rate-api\",\n  },\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_RATE_NAMES_START: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n\n    case FETCH_RATE_NAMES_SUCCESS: {\n      // rates: get rate\n      // data: get country + name + monetary code\n      const { rates, data } = action.payload;\n      // Create object for including all information\n      const countryObjects = [];\n      for (let [key, value] of Object.entries(data)) {\n        const rate = rates[`${key}`];\n        const newObj = {\n          fullCountryName: `${key} ${value}`,\n          countryCode: `${key}`,\n          baseRate: rate,\n          isFavorite: false,\n        };\n        if (newObj.baseRate !== undefined) {\n          countryObjects.push(newObj);\n        }\n      }\n      return {\n        ...state,\n        loading: false,\n        showFullCountryNames: countryObjects,\n        originalCountryNames: countryObjects,\n        initialFullCountryNames: countryObjects,\n        allRates: rates,\n      };\n    }\n    case SET_ORIGINAL_VALUE: {\n      return {\n        ...state,\n        inputOriginalValue: action.payload,\n      };\n    }\n\n    case TOGGLE_FAVOURITE_MONETARY: {\n      const newArr = state.initialFullCountryNames.map(function (country) {\n        if (country.fullCountryName === action.payload.fullCountryName) {\n          country.isFavorite = !country.isFavorite;\n        }\n        return country;\n      });\n\n      const faviousArr = newArr.filter((country) => country.isFavorite);\n      const nonFaviousArr = newArr.filter((country) => !country.isFavorite);\n\n      return {\n        ...state,\n        faviousCountries: faviousArr,\n        showFullCountryNames: [...faviousArr, ...nonFaviousArr],\n      };\n    }\n    case SEARCH_CURRENT_MODAL: {\n      const faviousArr = state.initialFullCountryNames.filter(\n        (country) => country.isFavorite\n      );\n      const nonFaviousArr = state.initialFullCountryNames.filter(\n        (country) => !country.isFavorite\n      );\n      const showFullCountryNames = [...faviousArr, ...nonFaviousArr].filter(\n        (country) =>\n          country.fullCountryName.toLowerCase().indexOf(action.payload) !== -1\n      );\n      return {\n        ...state,\n        showFullCountryNames: showFullCountryNames,\n      };\n    }\n\n    case SWITCH_OBJECT_FROM: {\n      return {\n        ...state,\n        changeObjectFrom: action.payload,\n        faviousCountries: state.faviousCountries.map((country) => {\n          if (country.countryCode === action.payload.countryCode) {\n            return state.changeObjectFrom;\n          }\n          return country;\n        }),\n      };\n    }\n\n    case SET_CURRENT_OBJECT_FROM: {\n      return {\n        ...state,\n        currentObjectFrom: action.payload,\n      };\n    }\n    case TOGGLE_CURRENT_MODAL: {\n      return {\n        ...state,\n        isCurrencyModelShowing: !state.isCurrencyModelShowing,\n      };\n    }\n    case TOGGLE_SETTING_MODAL: {\n      return {\n        ...state,\n        isSettingModelShowing: !state.isSettingModelShowing,\n      };\n    }\n\n    case CLOSE_ALL_MODAL: {\n      return {\n        ...state,\n        isSettingModelShowing: false,\n        isCurrencyModelShowing: false,\n      };\n    }\n    case SET_API_URL: {\n      return {\n        ...state,\n        apiRateUrl: action.payload,\n      };\n    }\n    //=================================================================\n    default:\n      return state;\n  }\n};\nexport default reducers;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport appReducers from \"./redux/reducers\";\n\n// configs for reducers\nconst allReducers = {\n  appReducers,\n};\nconst reducers = combineReducers({ ...allReducers });\n\nconst stores = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\nexport default stores;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport stores from \"./stores\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={stores}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}